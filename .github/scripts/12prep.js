module.exports = async function ({ github, context, core, env }) {
    const [owner, repo] = process.env.FORK_REPO.split('/');
    const body12 = [
        '',
        '### Task: Create private repositories (ðŸŸ¢ Easy)',
        '',
        '**Why this matters:**',
        'Some things are not ready (yet) for the public, for example, a paper draft before preprinting. How can we use GitHub in private?',
        '',
        '### Detailed Steps:',
        '',
        '**Step 1: Create a PRIVATE repository**',
        '1. Go to [github.com](https://github.com) and click the green **"New"** button',
        '   - Or use the **"+"** icon in the top right corner, then select "New repository"',
        '   - Or go to <github.com/new>',
        '2. Repository name: `private`',
        '3. **Important:** Select **Private** visibility (lock icon)',
        '4. Check the box "Add a README file"',
        '5. Click **"Create repository"**',
        '6. Create a new issue that should remain private. For example:',
        '```markdown',
        '# Team Notes on Reviewer Comments',
        'Reviewer 2 is being difficult again.',
        'TODO: Fix methodology they complained about',
        '```',
        '',
        '**Step 2: Test visibility with your partner**',
        '1. Share your GitHub username with your partner',
        '2. **Partner searches for your PRIVATE repo:**',
        '   - Type: `user:PARTNER_USERNAME private`',
        '   - Press Enter - this PRIVATE repo should NOT appear',
        '',
        '**Expected results:**',
        '- Private repository: hidden from non-collaborators',
        '',
        '**Discussion:** When would you use private vs public repos in your research?',
        '',
        '**When done:** Comment `/done 12` or try the hard version of this milestone.',
        '',
        '### Task: Create semi-private repositories (ðŸ”´ Super Hard)',
        '',
        '**Why this matters:**',
        'Sometimes we publish things, while still working on it, for example we publish a preprint, and then get reviews back. Perhaps you want to keep your discussion among collaborators secret but still maintain a properly versioned public GitHub repo.',
        '',
        '### Detailed Steps:',
        '',
        'To accomplish this, we create a public repo that mirrors our private repo. From time to time we sync up both versions.',
        '',
        '**Step 1: Create a PUBLIC repository**',
        '1. Go to [github.com](https://github.com) and click the green **"New"** button',
        '   - Or use the **"+"** icon in the top right corner, then select "New repository"',
        '   - Or go to <github.com/new>',
        '2. Repository name: `public`',
        '3. **Important:** Do not click any of the boxes, we need a fully empty repo.',
        '4. Leave visibility as "Public"',
        '5. Click **"Create repository"**',
        '',
        '**Step 2: Link your public repository**',
        '',
        '1. Go to your private repository.',
        '2. Open a Codespace (as learned in Milestone 11) or do it locally.',
        '3. Open a terminal `Terminal` â†’ `New Terminal`',
        '4. Add your public repo as a remote:',
        '```bash',
        'git remote add public https://github.com/YOURUSERNAME/public.git',
        '```',
        '5. Verify it worked:',
        '```bash',
        'git remote -v',
        '```',
        '6. You should see both "origin" (private) and "public" (public) listed',
        '',
        '**Step 3: Authenticate to push to another repo**',
        '',
        '```bash',
        'unset GITHUB_TOKEN',
        'gh auth login --scopes repo --git-protocol https --web --hostname github.com',
        '```',
        'Then:',
        '```bash',
        'gh auth setup-git',
        '```',
        '',
        '**Step 4: Push to the public repo**',
        '',
        '```bash',
        'git push public main',
        '```',
        '',
        'Now all the content from private is public but your PR and Issue discussion remain private. Therefore anything you want to keep private needs to remain in an Issue or PR.',
        'Importantly, if you ever commit some content in git even if you change it later, those private things can be resurfaced.',
        'One option for that is to use `git merge --squash` for the public branch/repo that hides all intermediate changes but we won\'t go into more detail. Feel free to ask, though!'
    ];
    
    await github.rest.issues.create({
        owner: owner,
        repo: repo,
        title: '[optional] Milestone 12: Create private and public repositories - ðŸŸ¢ Easy/ ðŸ”´ Hard',
        body: body12.join('\n'),
        labels: ['enhancement']
    });
}