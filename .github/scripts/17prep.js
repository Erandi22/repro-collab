module.exports = async function ({ github, context, core, env }) {
    const [owner, repo] = process.env.FORK_REPO.split('/');
    const trackingIssueUrl = context.payload.issue.html_url;

    const body17 = [
        '',
        '### Task: Force Complete File Review (üü° Medium)',
        '',
        '**Why this matters:**',
        'When reviewing pull requests, reviewers typically focus on the changed lines (the diff). But sometimes you need someone to carefully read an *entire* file‚Äîperhaps it\'s a critical document like a preregistration, a manuscript, or important documentation. By removing a file in one commit and re-adding it in a PR, you force the entire file to appear as "new," ensuring reviewers read every line carefully.',
        '',
        '**When to use this technique:**',
        '- üìÑ Important documents that need careful review (preregistrations, manuscripts)',
        '- üîç Files that have accumulated many small changes and need fresh eyes',
        '- ‚úÖ When you want to ensure nothing is overlooked',
        '- üìù Files where context matters more than just the changes',
        '',
        '**Learning Goals:**',
        '- Understand the difference between incremental and complete file review',
        '- Use strategic Git operations to control how reviewers see your changes',
        '- Practice a workflow for critical document review',
        '',
        '### Detailed Steps:',
        '',
        '**Step 1: Choose a file for complete review**',
        '1. Identify a file in your repository that would benefit from complete review',
        '2. For this exercise, use `preregistration.md` or another important document',
        '3. Make sure you\'re on the `main` branch: `git checkout main`',
        '',
        '**Step 2: Remove the file from main**',
        '',
        '**Option A: Using GitHub Web Interface**',
        '1. Navigate to the file on GitHub',
        '2. Click the **"..."** menu (three dots) in the top right',
        '3. Select **"Delete file"**',
        '4. Commit message: `Remove [filename] for complete review`',
        '5. Commit directly to `main` branch',
        '',
        '**Option B: Using Codespaces/Command Line**',
        '```bash',
        '# Make sure you\'re on main',
        'git checkout main',
        '',
        '# Remove the file',
        'git rm preregistration.md',
        '',
        '# Commit the removal',
        'git commit -m "Remove preregistration.md for complete review"',
        '',
        '# Push to GitHub',
        'git push origin main',
        '```',
        '',
        '**Step 3: Create a new branch with the file restored**',
        '',
        '**Option A: Using GitHub Web Interface**',
        '1. Go to your repository',
        '2. Click the branch dropdown and create a new branch: `complete-review`',
        '3. Navigate to an older commit (before deletion) using History',
        '4. View the file at that point in history',
        '5. Copy the entire content',
        '6. Switch to your `complete-review` branch',
        '7. Click **"Add file"** ‚Üí **"Create new file"**',
        '8. Paste the content and use the same filename: `preregistration.md`',
        '9. Commit message: `Re-add preregistration.md for review`',
        '',
        '**Option B: Using Codespaces/Command Line**',
        '```bash',
        '# Create and switch to a new branch',
        'git checkout -b complete-review',
        '',
        '# Restore the file from the previous commit',
        '# HEAD~1 means "one commit before HEAD"',
        'git checkout HEAD~1 -- preregistration.md',
        '',
        '# Commit the restored file',
        'git commit -m "Re-add preregistration.md for review"',
        '',
        '# Push the branch',
        'git push origin complete-review',
        '```',
        '',
        '**Step 4: Create a Pull Request**',
        '1. Go to your repository on GitHub',
        '2. You should see a prompt to create a PR for `complete-review`',
        '3. Click **"Compare & pull request"**',
        '4. Title: `Complete review of preregistration.md`',
        '5. Description:',
        '```markdown',
        '## Complete File Review',
        '',
        'This PR requires a complete review of `preregistration.md`.',
        '',
        '**Why this approach:**',
        'The file has been removed and re-added to ensure every line appears as "new" in the diff. This forces a thorough line-by-line review rather than just looking at changes.',
        '',
        '**What to review:**',
        '- [ ] Content accuracy',
        '- [ ] Clarity and readability',
        '- [ ] Completeness',
        '- [ ] Formatting and structure',
        '',
        '@partner-username Please review every line carefully!',
        '```',
        '6. Create the pull request',
        '',
        '**Step 5: Review the PR**',
        '1. Look at the **"Files changed"** tab',
        '2. Notice that **every line** appears in green (added)',
        '3. There are no red lines (deleted) because this is a "new" file from GitHub\'s perspective',
        '4. The reviewer must read the entire file, not just focus on changes',
        '5. Use the review features:',
        '   - Add comments on specific lines',
        '   - Start a review',
        '   - Approve or request changes',
        '',
        '**Step 6: Alternative - Review with context**',
        '',
        'If you want to see what actually changed while still forcing complete review:',
        '',
        '```bash',
        '# Compare the current file with the version before removal',
        'git diff HEAD~2 preregistration.md',
        '```',
        '',
        'This shows the *actual* changes, useful for the reviewer to understand what\'s different.',
        '',
        '**Step 7: Merge when approved**',
        '1. Once the review is complete and approved',
        '2. Merge the pull request',
        '3. The file is now back in `main` with complete review documentation',
        '',
        '**Expected results:**',
        '- ‚úì Removed a file from main branch',
        '- ‚úì Re-added the file in a new branch',
        '- ‚úì Created a PR where the entire file appears as new',
        '- ‚úì Understood how this forces complete review',
        '- ‚úì (With partner) Reviewed every line of the file',
        '',
        '---',
        '',
        '**Discussion Questions:**',
        '- When would this technique be useful in research? (e.g., manuscript submission, preregistration review)',
        '- What are the downsides of this approach?',
        '- Could you use this for code review? Why or why not?',
        '',
        '**Pro tips:**',
        '- üí° Use this technique sparingly‚Äîit\'s powerful but can be disruptive',
        '- üí° Always explain *why* you\'re using this technique in the PR description',
        '- üí° Consider using `git diff HEAD~2` to provide context about actual changes',
        '- üí° This works best for text documents, not code (where history matters more)',
        '- üí° Alternative: For manuscripts, consider using a separate "review" branch that\'s regularly force-pushed',
        '',
        '**When NOT to use this:**',
        '- ‚ùå For regular code changes (history is valuable)',
        '- ‚ùå For files with many contributors (disrupts history)',
        '- ‚ùå When incremental review is sufficient',
        '- ‚ùå For binary files or large datasets',
        '',
        `**When done:** Comment \`/done 17\` [in the tracking issue](${trackingIssueUrl}).`,
        '',
        '**Real-world example:**',
        'Research teams often use this when submitting a preregistration for final review before locking it in, or when a manuscript draft is ready for complete review before submission. It ensures collaborators actually *read* the document rather than just skimming the changes.',
        '',
    ];

    await github.rest.issues.create({
        owner: owner,
        repo: repo,
        title: '[optional] Milestone 17: Force Complete File Review - üü° Medium',
        body: body17.join('\n'),
        labels: ['enhancement']
    });
}
