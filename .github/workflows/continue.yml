# .github/workflows/continue.yml
name: Milestone Router

concurrency:
  group: "milestones-${{ github.event.issue.number  }}"
  cancel-in-progress: false

on:
  issue_comment:
    types: [created, edited]

jobs:
  route:
    if: ${{ contains(github.event.comment.body, 'done') && contains(github.event.issue.labels.*.name, 'newfork') }}
    runs-on: ubuntu-latest
    steps:
      - name: Extract FORK from issue body
        id: vars
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          FORK_REPO="$(echo "$ISSUE_BODY" \
            | grep -oP 'Fork repo: `\K[^`]+')"
          echo "Extracted fork repo: $FORK_REPO"
          echo "fork_repo=$FORK_REPO" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v5
        with:
          sparse-checkout: |
            .github/scripts
          sparse-checkout-cone-mode: false
      - name: Parse slash-command
        id: parse
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT_CROSSREPO }}
          result-encoding: string
          script: |
            const run = require('./.github/scripts/parse.js');
            return await run({ github, context, core, env: process.env });
      
      # Run milestone validation script
      - name: Run milestone script
        id: milestone
        if: steps.parse.outputs.result != '' && steps.parse.outputs.result != '-1'
        uses: actions/github-script@v7
        env:
          FORK_REPO: ${{ steps.vars.outputs.fork_repo }}
          MILESTONE: ${{ steps.parse.outputs.result }}
          UPSTREAM_TOKEN: ${{ secrets.GH_PAT_UPSTREAM }}
          CROSSREPO_TOKEN: ${{ secrets.GH_PAT_CROSSREPO }}
        with:
          github-token: ${{ secrets.GH_PAT_CROSSREPO }}
          script: |
            const milestone = process.env.MILESTONE;
            const scriptName = `${milestone}`;
            console.log(`Running ${scriptName}.js...`);
            const run = require(`./.github/scripts/${scriptName}.js`);
            return await run({ github, context, core, env: process.env });
      
      - name: Prep milestones 10-15
        if: steps.parse.outputs.result == '9' && steps.milestone.outputs.validated == 'true'
        uses: actions/github-script@v7
        env:
          FORK_REPO: ${{ steps.vars.outputs.fork_repo }}
        with:
          github-token: ${{ secrets.GH_PAT_CROSSREPO }}
          script: |
            // Run prep scripts for milestones 10-15
            for (let milestone = 10; milestone <= 15; milestone++) {
              const scriptName = `${milestone}prep`;
              console.log(`Running ${scriptName}.js...`);
              const run = require(`./.github/scripts/${scriptName}.js`);
              await run({ github, context, core, env: process.env });
            }
            // Update main issue - mark both 9 and 10 complete
            const updatedBody = context.payload.issue.body
            + '\n- [ ] 10. Collaborate on issues  - 游댮 Hard' +
            '\n- [ ] 11. Learn about GitHub Codespaces - 游리 Medium' +
            '\n- [ ] 12. Create private and public repositories - 游릭 Easy/ 游댮 Hard' +
            '\n- [ ] 13. Work with people who don\'t use Git/GitHub - 游리 Medium' +
            '\n- [ ] 14. Use GitHub Projects, Labels, and Assignments - 游리 Medium' +
            '\n- [ ] 15. Learn Git Branching Interactively - 游릭 Easy / 游리 Medium / 游댮 Hard';

            await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: updatedBody,
                state: 'open'
            });
            
      
      # Failure notification step - only triggers if milestone verification steps fail
      - name: Notify on failure
        if: failure() && steps.parse.outputs.result != '-1' && steps.parse.outputs.result != ''
        uses: actions/github-script@v7
        env:
          MILESTONE: ${{ steps.parse.outputs.result }}
        with:
          github-token: ${{ secrets.GH_PAT_CROSSREPO }}
          script: |
            const run = require('./.github/scripts/fail.js');
            return await run({ github, context, core, env: process.env });
